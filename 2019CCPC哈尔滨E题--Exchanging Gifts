#include<bits/stdc++.h>

using namespace std;
typedef long long ll;
const int maxn = 1e6 + 10;
int op[maxn][3];
ll cnt[maxn];
vector<int> v[maxn];

int main(){
    int T;
    scanf("%d",&T);
    while(T--){
        int n;
        scanf("%d",&n);
        for(int i = 1; i <= n; i++){
            cnt[i] = 0;
            v[i].clear();
            scanf("%d",&op[i][0]);
            if(op[i][0] == 1){
                int m;
                scanf("%d",&m);
                for(int j = 1; j <= m; j++) {
                    int x;
                    scanf("%d",&x);
                    v[i].push_back(x);
                }
            }
            else scanf("%d%d",&op[i][1],&op[i][2]);
        }
        cnt[n] = 1;
        for(int i = n; i >= 1; i--){
            if(op[i][0] == 2) cnt[op[i][1]] += cnt[i], cnt[op[i][2]] += cnt[i];
        }
        ll x = 0, tol = 0, len = 0;
        for(int i = 1; i <= n; i++){
            if(op[i][0] == 1 && cnt[i] != 0){
                for(auto u : v[i]){
                    if(x == 0) x = u, tol += cnt[i];
                    else if(x == u) tol += cnt[i];
                    else{
                        tol -= cnt[i];
                        if(tol < 0) x = u, tol = -tol;
                    }
                    len += cnt[i];
                }
            }
        }
        tol = 0;
        for(int i = 1; i <= n; i++){
            if(op[i][0] == 1 && cnt[i] != 0){
                for(auto u : v[i]) if(u == x) tol += cnt[i];
            }
        }
        //cout<<tol<<" "<<len<<endl;
        if(tol * 2 > len) printf("%lld\n",(len - tol) * 2);
        else printf("%lld\n",len);
    }
    return 0;
}
///统计最后的的长度以及给的的串使用的次数，算出最后串出现次数最多的数的次数即可
///拓扑排序可以实现，时间复杂度会低一点
