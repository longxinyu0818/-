#include<bits/stdc++.h>

using namespace std;
const int maxn = 2e5 + 10;
int hero[maxn], power[maxn], s[maxn], monster[maxn];

int main(){
    int T;
    cin>>T;
    while(T--){
        int n, m;
        int maxm = 0, maxh = 0, ans = 0;
        cin>>n;
        for(int i = 0; i < n; i++) cin>>monster[i], maxm = max(maxm, monster[i]), hero[i] = 0;
        cin>>m;
        for(int i = 0; i < m; i++){
            cin>>power[i]>>s[i];
            maxh = max(power[i], maxh);
            hero[s[i] - 1] = max(hero[s[i] - 1], power[i]);
        }
        for(int i = n - 2; i >= 0; i--) hero[i] = max(hero[i], hero[i + 1]);
        int cnt = -1, tmp = -1, day = 0;
        if(maxh < maxm){
            cout<<-1<<endl;
            continue;
        }
        while(day < n){
            tmp = max(tmp, monster[day]);
            cnt++;
            if(hero[cnt] < tmp){
                //////后面所有的勇士都不能一个人打死所有的怪必须下一天
                ans++;
                cnt = 0;
                tmp = monster[day];
            }
            day++;
        }
        ans++;
        cout<<ans<<endl;
    }
    return 0;
}
///贪心，维护hero[i]数组，表示最少能坚持i天的英雄的最大能力值，再从能坚持一天，到两天的开始遍历
