#include<bits/stdc++.h>

using namespace std;
const int maxn = 1e6 + 10;
int dis[maxn][105];
vector<int> v[maxn];
int n, m, k, s;

void bfs(int x){
    queue<int> q;
    q.push(x+n);
    while(!q.empty()){
        int now = q.front();
        q.pop();
        for(int i = 0; i < v[now].size(); i++){
            int u = v[now][i];
            if(dis[u][x] == 0){
                dis[u][x] = dis[now][x] + 1;
                q.push(u);
            }
        }
    }
}

int main(){
    cin>>n>>m>>k>>s;
    for(int i = 1; i <= n; i++){
        int x;
        cin>>x;
        v[x + n].push_back(i);
    }
    for(int i = 1; i <= m; i++){
        int x, y;
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    for(int i = 1; i <= n; i++) bfs(i);
    for(int i = 1; i <= n; i++){
        int ans = 0;
        sort(dis[i] + 1, dis[i] + 1 + k);
        for(int j = 1; j <= s; j++) ans += dis[i][j] - 1;
        cout<<ans<<" ";
    }
    cout<<endl;
    return 0;
}
/*
多源bfs，跑完后排序取前s个即可
*/
