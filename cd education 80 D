#include<bits/stdc++.h>

using namespace std;
const int maxn = 3e5 + 10;
const int maxx = 255 + 10;
int a[maxn][10], vis[maxx];
int n, m, x, y;

bool check(int num){
    memset(vis, 0, sizeof(vis));
    for(int i = 1; i <= n; i++){
        int t = 0;
        for(int j = 1; j <= m; j++){
            if(a[i][j] >= num) t |= 1<<(j - 1);
        }
        vis[t] = i;
    }
    for(int i = 0; i <= 256; i++){
        for(int j = 0; j <= 256; j++){
            if(vis[i]&&vis[j]&&(i|j)==((1<<m))-1){
                x = vis[i];
                y = vis[j];
                return true;
            }
        }
    }
    return false;
}

int main(){
    cin>>n>>m;
    for(int i = 1; i <= n; i++) for(int j = 1; j <= m; j++) cin>>a[i][j];
    int l = 0, r = 1e9;
    while(l <= r){
        int mid = (l + r) >> 1;
        if(check(mid)) l = mid + 1;
        else r = mid - 1;
    }
    cout<<x<<" "<<y<<endl;
    return 0;
}
/*
题意：给定n个长度为m得序列，找出i,j两个序列，得到一个新的序列
      bk = max(ik, jk), 使得序列b中得最小值最大，i,j可以相等

解法：
      将长度为m得序列转化为二进制，由于m<=8。最大不会超过255，
      二分值进行判断，如果当前a[i][j]>=mid,则当前位为1，否则为0
      ，判断255中两个得都大于mid---->(i|j)==(1<<m)-1,|运算符两个都为0才为0
*/
