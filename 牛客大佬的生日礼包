#include<bits/stdc++.h>

using namespace std;
int arr[5];

int main(){
    int T;
    cin>>T;
    while(T--){
        int a, b, c;
        cin>>a>>b>>c;
        int l = 0, r = 3e6, ans = 0;
        while(l <= r){
            int mid = (l + r) >> 1, len = 0;
            arr[1] = a - mid, arr[2] = b - mid, arr[3] = c;
            sort(arr + 1, arr + 1 + 3);
            if(arr[1] < 0 || arr[2] < 0 || arr[3] < 0) {
                r = mid - 1;
                continue;
            }
            if(arr[1] + arr[2] >= arr[3]) len = arr[1] + arr[2] + arr[3];
            else len = 2*(arr[1] + arr[2]) + 1;
            if(len >= mid){
                ans = mid;
                l = mid + 1;
            }
            else r = mid - 1;
        }
        cout<<ans<<endl;
    }
    return 0;
}
/*
二分答案，a、b、c够不够组成达到这个答案的长度呢
当前验证答案为mid
观察到每一份礼包都有至少一个a一个b，先给这些每一个分一个a一个b
那么剩下的a、b、c   分给每个位置一个什么东西就决定了这个位置属于什么礼包
问题就变成了剩下的abc能不能构成长度为mid，相邻不同的一个序列
当剩余的abc中某个为负数那肯定这个答案是不行了
能不能组成，假如我们给abc排个序使得a<=b<=c的话，假如a+b>=c那么能组成的最长长度为a+b+c（自己画个图）
如果a+b<c,那么能组成的最长度就是（2*（a+b））+1（有剩余可以加到末尾）
我们当然可以通过这种方式计算出最长的长度然后来判断
此外，对于答案mid，能不能达到，就看abc中最小两个相加能不能>=mid/2
*/
